#!/bin/bash

ABSPATH=$(cd "$(dirname "$0")"; pwd)
echo ""
echo ""
echo "-=== ALL PARAMS ===-"
echo $@
echo ""
echo ""
echo "-=== FILTERED PARAMS ===-"
FILTEREDPARAMS=`$ABSPATH/filterargs $@`
FNAME=`$ABSPATH/filtername $@ | tr -d ' '`

FNAME=`pwd`/$FNAME
FNAMEORG=$FNAME

#ABSPATH=$(echo $ABSPATH | sed s/scratch/local/g)

#FILTEREDPARAMS=$(echo $FILTEREDPARAMS | sed s/scratch/local/g)
#FNAME=$(echo $FNAME | sed s/scratch/local/g)

echo $FILTEREDPARAMS
echo filename "$FNAMEORG"

echo ""
echo ""
/usr/bin/gcc $@

# set output files
outBase="$(dirname $FNAME)/$(basename $FNAME .c)"
outDbg="$outBase.dbg"
outPartialPreproc="$outBase.pi"
outErr="$outBase.err"
outTime="$outBase.time"

# base parameters
baseParam="
	--bdd --dimacsFeaturePrefix \"\" --no-warnings \
	-I ../TypeChef-GNUCHeader/x86_64-linux-gnu/4.8/include-fixed \
	-I ../TypeChef-GNUCHeader/x86_64-linux-gnu/4.8/include \ 
	-I ../TypeChef-GNUCHeader/usr_include/x86_64-linux-gnu \
	-I ../TypeChef-GNUCHeader/usr_include \
	--platfromHeader    $ABSPATH/platform.h \
	--openFeat          $ABSPATH/openfeatures.txt \
	--featureModelDimacs $ABSPATH/OpenSSL.dimacs \
	--include $ABSPATH/partial_configuration.h \
	--serializeAST  \
      	-A cfginnonvoidfunction -A doublefree -A xfree -A uninitializedmemory -A casetermination -A danglingswitchcode -A checkstdlibfuncreturn -A deadstore -A interactiondegree \
	--recordTiming --parserstatistics --lexNoStdout \
	$FILTEREDPARAMS "

# run typechef only in case we have a c file
if [[ -f $FNAMEORG ]];
then

	echo "Starting TypeChef"
	echo "$baseParam"
	echo "$FNAME"
#	sbatch -p chimaira  -A spl -n 1 -c 2 --exclude=chimaira17 --time=06:00:00  --mem_bind=local --output=/dev/null --error=/dev/null  /scratch/janker/TypeChef/typechef.sh $FNAME $baseParam
        $ABSPATH/../../TypeChef/typechef.sh $FNAME $baseParam
	# TypeChef resides next to TypeChef-<projectname> two levels up
	# create the serialized AST in the first run
	# apply sampling and family-based analysis for each strategy afterwards
	# in a single run
fi

echo "Finished"
echo ""
